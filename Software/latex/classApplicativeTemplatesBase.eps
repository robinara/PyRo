%!PS-Adobe-2.0 EPSF-2.0
%%Title: ClassName
%%Creator: Doxygen
%%CreationDate: Time
%%For: 
%Magnification: 1.00
%%Orientation: Portrait
%%BoundingBox: 0 0 500 1074.918567
%%Pages: 0
%%BeginSetup
%%EndSetup
%%EndComments

% ----- variables -----

/boxwidth 0 def
/boxheight 40 def
/fontheight 24 def
/marginwidth 10 def
/distx 20 def
/disty 40 def
/boundaspect 0.465152 def  % aspect ratio of the BoundingBox (width/height)
/boundx 500 def
/boundy boundx boundaspect div def
/xspacing 0 def
/yspacing 0 def
/rows 66 def
/cols 4 def
/scalefactor 0 def
/boxfont /Times-Roman findfont fontheight scalefont def

% ----- procedures -----

/dotted { [1 4] 0 setdash } def
/dashed { [5] 0 setdash } def
/solid  { [] 0 setdash } def

/max % result = MAX(arg1,arg2)
{
  /a exch def
  /b exch def
  a b gt {a} {b} ifelse
} def

/xoffset % result = MAX(0,(scalefactor-(boxwidth*cols+distx*(cols-1)))/2)
{
  0 scalefactor boxwidth cols mul distx cols 1 sub mul add sub 2 div max
} def

/cw % boxwidth = MAX(boxwidth, stringwidth(arg1))
{
  /str exch def
  /boxwidth boxwidth str stringwidth pop max def
} def

/box % draws a box with text `arg1' at grid pos (arg2,arg3)
{ gsave
  2 setlinewidth
  newpath
  exch xspacing mul xoffset add
  exch yspacing mul
  moveto
  boxwidth 0 rlineto 
  0 boxheight rlineto 
  boxwidth neg 0 rlineto 
  0 boxheight neg rlineto 
  closepath
  dup stringwidth pop neg boxwidth add 2 div
  boxheight fontheight 2 div sub 2 div
  rmoveto show stroke
  grestore
} def  

/mark
{ newpath
  exch xspacing mul xoffset add boxwidth add
  exch yspacing mul
  moveto
  0 boxheight 4 div rlineto
  boxheight neg 4 div boxheight neg 4 div rlineto
  closepath
  eofill
  stroke
} def

/arrow
{ newpath
  moveto
  3 -8 rlineto
  -6 0 rlineto
  3 8 rlineto
  closepath
  eofill
  stroke
} def

/out % draws an output connector for the block at (arg1,arg2)
{
  newpath
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul boxheight add
  /y exch def
  /x exch def
  x y moveto
  0 disty 2 div rlineto 
  stroke
  1 eq { x y disty 2 div add arrow } if
} def

/in % draws an input connector for the block at (arg1,arg2)
{
  newpath
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul disty 2 div sub
  /y exch def
  /x exch def
  x y moveto
  0 disty 2 div rlineto
  stroke
  1 eq { x y disty 2 div add arrow } if
} def

/hedge
{
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul boxheight 2 div sub
  /y exch def
  /x exch def
  newpath
  x y moveto
  boxwidth 2 div distx add 0 rlineto
  stroke
  1 eq
  { newpath x boxwidth 2 div distx add add y moveto
    -8 3 rlineto
    0 -6 rlineto
    8 3 rlineto
    closepath
    eofill
    stroke
  } if
} def

/vedge
{
  /ye exch def
  /ys exch def
  /xs exch def
  newpath
  xs xspacing mul xoffset add boxwidth 2 div add dup
  ys yspacing mul boxheight 2 div sub
  moveto
  ye yspacing mul boxheight 2 div sub
  lineto
  stroke
} def

/conn % connections the blocks from col `arg1' to `arg2' of row `arg3'
{
  /ys exch def
  /xe exch def
  /xs exch def
  newpath
  xs xspacing mul xoffset add boxwidth 2 div add
  ys yspacing mul disty 2 div sub
  moveto
  xspacing xe xs sub mul 0
  rlineto
  stroke
} def

% ----- main ------

boxfont setfont
1 boundaspect scale
(ApplicativeTemplatesBase) cw
(OneOperandApplicativeTemplatesBase) cw
(TwoOperandApplicativeTemplatesBase) cw
(_bz_abs< P_numtype1 >) cw
(_bz_abs< double >) cw
(_bz_abs< float >) cw
(_bz_abs< long >) cw
(_bz_abs< long double >) cw
(_bz_acos< P_numtype1 >) cw
(_bz_acos< float >) cw
(_bz_acos< long double >) cw
(_bz_asin< P_numtype1 >) cw
(_bz_asin< float >) cw
(_bz_asin< long double >) cw
(_bz_atan< P_numtype1 >) cw
(_bz_atan< float >) cw
(_bz_atan< long double >) cw
(_bz_BitwiseNot< P_numtype >) cw
(_bz_Cast< P_numtype_in, P_numtype_out >) cw
(_bz_ceil< P_numtype1 >) cw
(_bz_ceil< float >) cw
(_bz_ceil< long double >) cw
(_bz_cexp< P_numtype1 >) cw
(_bz_cos< P_numtype1 >) cw
(_bz_cos< float >) cw
(_bz_cos< long double >) cw
(_bz_cosh< P_numtype1 >) cw
(_bz_cosh< float >) cw
(_bz_cosh< long double >) cw
(_bz_csqrt< P_numtype1 >) cw
(_bz_exp< P_numtype1 >) cw
(_bz_exp< float >) cw
(_bz_exp< long double >) cw
(_bz_floor< P_numtype1 >) cw
(_bz_floor< float >) cw
(_bz_floor< long double >) cw
(_bz_log< P_numtype1 >) cw
(_bz_log10< P_numtype1 >) cw
(_bz_log10< float >) cw
(_bz_log10< long double >) cw
(_bz_log< float >) cw
(_bz_log< long double >) cw
(_bz_LogicalNot< P_numtype >) cw
(_bz_negate< P_numtype >) cw
(_bz_pow2< P_numtype1 >) cw
(_bz_pow3< P_numtype1 >) cw
(_bz_pow4< P_numtype1 >) cw
(_bz_pow5< P_numtype1 >) cw
(_bz_pow6< P_numtype1 >) cw
(_bz_pow7< P_numtype1 >) cw
(_bz_pow8< P_numtype1 >) cw
(_bz_sin< P_numtype1 >) cw
(_bz_sin< float >) cw
(_bz_sin< long double >) cw
(_bz_sinh< P_numtype1 >) cw
(_bz_sinh< float >) cw
(_bz_sinh< long double >) cw
(_bz_sqr< P_numtype >) cw
(_bz_sqrt< P_numtype1 >) cw
(_bz_sqrt< float >) cw
(_bz_sqrt< long double >) cw
(_bz_tan< P_numtype1 >) cw
(_bz_tan< float >) cw
(_bz_tan< long double >) cw
(_bz_tanh< P_numtype1 >) cw
(_bz_tanh< float >) cw
(_bz_tanh< long double >) cw
(_bz_Add< P_numtype1, P_numtype2 >) cw
(_bz_atan2< P_numtype1, P_numtype2 >) cw
(_bz_atan2< float, float >) cw
(_bz_atan2< long double, long double >) cw
(_bz_BitwiseAnd< P_numtype1, P_numtype2 >) cw
(_bz_BitwiseOr< P_numtype1, P_numtype2 >) cw
(_bz_BitwiseXOR< P_numtype1, P_numtype2 >) cw
(_bz_Divide< P_numtype1, P_numtype2 >) cw
(_bz_Equal< P_numtype1, P_numtype2 >) cw
(_bz_fmod< P_numtype1, P_numtype2 >) cw
(_bz_Greater< P_numtype1, P_numtype2 >) cw
(_bz_GreaterOrEqual< P_numtype1, P_numtype2 >) cw
(_bz_Less< P_numtype1, P_numtype2 >) cw
(_bz_LessOrEqual< P_numtype1, P_numtype2 >) cw
(_bz_LogicalAnd< P_numtype1, P_numtype2 >) cw
(_bz_LogicalOr< P_numtype1, P_numtype2 >) cw
(_bz_Max< P_numtype1, P_numtype2 >) cw
(_bz_Min< P_numtype1, P_numtype2 >) cw
(_bz_Mod< P_numtype1, P_numtype2 >) cw
(_bz_Multiply< P_numtype1, P_numtype2 >) cw
(_bz_NotEqual< P_numtype1, P_numtype2 >) cw
(_bz_pow< P_numtype1, P_numtype2 >) cw
(_bz_pow< float, float >) cw
(_bz_pow< long double, long double >) cw
(_bz_ShiftLeft< P_numtype1, P_numtype2 >) cw
(_bz_ShiftRight< P_numtype1, P_numtype2 >) cw
(_bz_Subtract< P_numtype1, P_numtype2 >) cw
/boxwidth boxwidth marginwidth 2 mul add def
/xspacing boxwidth distx add def
/yspacing boxheight disty add def
/scalefactor 
  boxwidth cols mul distx cols 1 sub mul add
  boxheight rows mul disty rows 1 sub mul add boundaspect mul 
  max def
boundx scalefactor div boundy scalefactor div scale

% ----- classes -----

 (ApplicativeTemplatesBase) 1.000000 65.000000 box
 (OneOperandApplicativeTemplatesBase) 0.000000 64.000000 box
 (TwoOperandApplicativeTemplatesBase) 2.000000 64.000000 box
 (_bz_abs< P_numtype1 >) 1.000000 63.000000 box
 (_bz_abs< double >) 1.000000 62.000000 box
 (_bz_abs< float >) 1.000000 61.000000 box
 (_bz_abs< long >) 1.000000 60.000000 box
 (_bz_abs< long double >) 1.000000 59.000000 box
 (_bz_acos< P_numtype1 >) 1.000000 58.000000 box
 (_bz_acos< float >) 1.000000 57.000000 box
 (_bz_acos< long double >) 1.000000 56.000000 box
 (_bz_asin< P_numtype1 >) 1.000000 55.000000 box
 (_bz_asin< float >) 1.000000 54.000000 box
 (_bz_asin< long double >) 1.000000 53.000000 box
 (_bz_atan< P_numtype1 >) 1.000000 52.000000 box
 (_bz_atan< float >) 1.000000 51.000000 box
 (_bz_atan< long double >) 1.000000 50.000000 box
 (_bz_BitwiseNot< P_numtype >) 1.000000 49.000000 box
 (_bz_Cast< P_numtype_in, P_numtype_out >) 1.000000 48.000000 box
 (_bz_ceil< P_numtype1 >) 1.000000 47.000000 box
 (_bz_ceil< float >) 1.000000 46.000000 box
 (_bz_ceil< long double >) 1.000000 45.000000 box
 (_bz_cexp< P_numtype1 >) 1.000000 44.000000 box
 (_bz_cos< P_numtype1 >) 1.000000 43.000000 box
 (_bz_cos< float >) 1.000000 42.000000 box
 (_bz_cos< long double >) 1.000000 41.000000 box
 (_bz_cosh< P_numtype1 >) 1.000000 40.000000 box
 (_bz_cosh< float >) 1.000000 39.000000 box
 (_bz_cosh< long double >) 1.000000 38.000000 box
 (_bz_csqrt< P_numtype1 >) 1.000000 37.000000 box
 (_bz_exp< P_numtype1 >) 1.000000 36.000000 box
 (_bz_exp< float >) 1.000000 35.000000 box
 (_bz_exp< long double >) 1.000000 34.000000 box
 (_bz_floor< P_numtype1 >) 1.000000 33.000000 box
 (_bz_floor< float >) 1.000000 32.000000 box
 (_bz_floor< long double >) 1.000000 31.000000 box
 (_bz_log< P_numtype1 >) 1.000000 30.000000 box
 (_bz_log10< P_numtype1 >) 1.000000 29.000000 box
 (_bz_log10< float >) 1.000000 28.000000 box
 (_bz_log10< long double >) 1.000000 27.000000 box
 (_bz_log< float >) 1.000000 26.000000 box
 (_bz_log< long double >) 1.000000 25.000000 box
 (_bz_LogicalNot< P_numtype >) 1.000000 24.000000 box
 (_bz_negate< P_numtype >) 1.000000 23.000000 box
 (_bz_pow2< P_numtype1 >) 1.000000 22.000000 box
 (_bz_pow3< P_numtype1 >) 1.000000 21.000000 box
 (_bz_pow4< P_numtype1 >) 1.000000 20.000000 box
 (_bz_pow5< P_numtype1 >) 1.000000 19.000000 box
 (_bz_pow6< P_numtype1 >) 1.000000 18.000000 box
 (_bz_pow7< P_numtype1 >) 1.000000 17.000000 box
 (_bz_pow8< P_numtype1 >) 1.000000 16.000000 box
 (_bz_sin< P_numtype1 >) 1.000000 15.000000 box
 (_bz_sin< float >) 1.000000 14.000000 box
 (_bz_sin< long double >) 1.000000 13.000000 box
 (_bz_sinh< P_numtype1 >) 1.000000 12.000000 box
 (_bz_sinh< float >) 1.000000 11.000000 box
 (_bz_sinh< long double >) 1.000000 10.000000 box
 (_bz_sqr< P_numtype >) 1.000000 9.000000 box
 (_bz_sqrt< P_numtype1 >) 1.000000 8.000000 box
 (_bz_sqrt< float >) 1.000000 7.000000 box
 (_bz_sqrt< long double >) 1.000000 6.000000 box
 (_bz_tan< P_numtype1 >) 1.000000 5.000000 box
 (_bz_tan< float >) 1.000000 4.000000 box
 (_bz_tan< long double >) 1.000000 3.000000 box
 (_bz_tanh< P_numtype1 >) 1.000000 2.000000 box
 (_bz_tanh< float >) 1.000000 1.000000 box
 (_bz_tanh< long double >) 1.000000 0.000000 box
 (_bz_Add< P_numtype1, P_numtype2 >) 3.000000 63.000000 box
 (_bz_atan2< P_numtype1, P_numtype2 >) 3.000000 62.000000 box
 (_bz_atan2< float, float >) 3.000000 61.000000 box
 (_bz_atan2< long double, long double >) 3.000000 60.000000 box
 (_bz_BitwiseAnd< P_numtype1, P_numtype2 >) 3.000000 59.000000 box
 (_bz_BitwiseOr< P_numtype1, P_numtype2 >) 3.000000 58.000000 box
 (_bz_BitwiseXOR< P_numtype1, P_numtype2 >) 3.000000 57.000000 box
 (_bz_Divide< P_numtype1, P_numtype2 >) 3.000000 56.000000 box
 (_bz_Equal< P_numtype1, P_numtype2 >) 3.000000 55.000000 box
 (_bz_fmod< P_numtype1, P_numtype2 >) 3.000000 54.000000 box
 (_bz_Greater< P_numtype1, P_numtype2 >) 3.000000 53.000000 box
 (_bz_GreaterOrEqual< P_numtype1, P_numtype2 >) 3.000000 52.000000 box
 (_bz_Less< P_numtype1, P_numtype2 >) 3.000000 51.000000 box
 (_bz_LessOrEqual< P_numtype1, P_numtype2 >) 3.000000 50.000000 box
 (_bz_LogicalAnd< P_numtype1, P_numtype2 >) 3.000000 49.000000 box
 (_bz_LogicalOr< P_numtype1, P_numtype2 >) 3.000000 48.000000 box
 (_bz_Max< P_numtype1, P_numtype2 >) 3.000000 47.000000 box
 (_bz_Min< P_numtype1, P_numtype2 >) 3.000000 46.000000 box
 (_bz_Mod< P_numtype1, P_numtype2 >) 3.000000 45.000000 box
 (_bz_Multiply< P_numtype1, P_numtype2 >) 3.000000 44.000000 box
 (_bz_NotEqual< P_numtype1, P_numtype2 >) 3.000000 43.000000 box
 (_bz_pow< P_numtype1, P_numtype2 >) 3.000000 42.000000 box
 (_bz_pow< float, float >) 3.000000 41.000000 box
 (_bz_pow< long double, long double >) 3.000000 40.000000 box
 (_bz_ShiftLeft< P_numtype1, P_numtype2 >) 3.000000 39.000000 box
 (_bz_ShiftRight< P_numtype1, P_numtype2 >) 3.000000 38.000000 box
 (_bz_Subtract< P_numtype1, P_numtype2 >) 3.000000 37.000000 box

% ----- relations -----

solid
1 1.000000 64.250000 out
solid
0.000000 2.000000 65.000000 conn
solid
0 0.000000 64.750000 in
solid
1 0.000000 63.250000 out
solid
0 2.000000 64.750000 in
solid
1 2.000000 63.250000 out
solid
0 0.000000 63.500000 hedge
solid
0 0.000000 62.500000 hedge
solid
0 0.000000 61.500000 hedge
solid
0 0.000000 60.500000 hedge
solid
0 0.000000 59.500000 hedge
solid
0 0.000000 58.500000 hedge
solid
0 0.000000 57.500000 hedge
solid
0 0.000000 56.500000 hedge
solid
0 0.000000 55.500000 hedge
solid
0 0.000000 54.500000 hedge
solid
0 0.000000 53.500000 hedge
solid
0 0.000000 52.500000 hedge
solid
0 0.000000 51.500000 hedge
solid
0 0.000000 50.500000 hedge
solid
0 0.000000 49.500000 hedge
solid
0 0.000000 48.500000 hedge
solid
0 0.000000 47.500000 hedge
solid
0 0.000000 46.500000 hedge
solid
0 0.000000 45.500000 hedge
solid
0 0.000000 44.500000 hedge
solid
0 0.000000 43.500000 hedge
solid
0 0.000000 42.500000 hedge
solid
0 0.000000 41.500000 hedge
solid
0 0.000000 40.500000 hedge
solid
0 0.000000 39.500000 hedge
solid
0 0.000000 38.500000 hedge
solid
0 0.000000 37.500000 hedge
solid
0 0.000000 36.500000 hedge
solid
0 0.000000 35.500000 hedge
solid
0 0.000000 34.500000 hedge
solid
0 0.000000 33.500000 hedge
solid
0 0.000000 32.500000 hedge
solid
0 0.000000 31.500000 hedge
solid
0 0.000000 30.500000 hedge
solid
0 0.000000 29.500000 hedge
solid
0 0.000000 28.500000 hedge
solid
0 0.000000 27.500000 hedge
solid
0 0.000000 26.500000 hedge
solid
0 0.000000 25.500000 hedge
solid
0 0.000000 24.500000 hedge
solid
0 0.000000 23.500000 hedge
solid
0 0.000000 22.500000 hedge
solid
0 0.000000 21.500000 hedge
solid
0 0.000000 20.500000 hedge
solid
0 0.000000 19.500000 hedge
solid
0 0.000000 18.500000 hedge
solid
0 0.000000 17.500000 hedge
solid
0 0.000000 16.500000 hedge
solid
0 0.000000 15.500000 hedge
solid
0 0.000000 14.500000 hedge
solid
0 0.000000 13.500000 hedge
solid
0 0.000000 12.500000 hedge
solid
0 0.000000 11.500000 hedge
solid
0 0.000000 10.500000 hedge
solid
0 0.000000 9.500000 hedge
solid
0 0.000000 8.500000 hedge
solid
0 0.000000 7.500000 hedge
solid
0 0.000000 6.500000 hedge
solid
0 0.000000 5.500000 hedge
solid
0 0.000000 4.500000 hedge
solid
0 0.000000 3.500000 hedge
solid
0 0.000000 2.500000 hedge
solid
0 0.000000 1.500000 hedge
solid
0 0.000000 0.500000 hedge
solid
0.000000 64.000000 0.500000 vedge
solid
0 2.000000 63.500000 hedge
solid
0 2.000000 62.500000 hedge
solid
0 2.000000 61.500000 hedge
solid
0 2.000000 60.500000 hedge
solid
0 2.000000 59.500000 hedge
solid
0 2.000000 58.500000 hedge
solid
0 2.000000 57.500000 hedge
solid
0 2.000000 56.500000 hedge
solid
0 2.000000 55.500000 hedge
solid
0 2.000000 54.500000 hedge
solid
0 2.000000 53.500000 hedge
solid
0 2.000000 52.500000 hedge
solid
0 2.000000 51.500000 hedge
solid
0 2.000000 50.500000 hedge
solid
0 2.000000 49.500000 hedge
solid
0 2.000000 48.500000 hedge
solid
0 2.000000 47.500000 hedge
solid
0 2.000000 46.500000 hedge
solid
0 2.000000 45.500000 hedge
solid
0 2.000000 44.500000 hedge
solid
0 2.000000 43.500000 hedge
solid
0 2.000000 42.500000 hedge
solid
0 2.000000 41.500000 hedge
solid
0 2.000000 40.500000 hedge
solid
0 2.000000 39.500000 hedge
solid
0 2.000000 38.500000 hedge
solid
0 2.000000 37.500000 hedge
solid
2.000000 64.000000 37.500000 vedge
